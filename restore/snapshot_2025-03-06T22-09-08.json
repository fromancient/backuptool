{
    "timestamp": "2025-03-06T22-09-08",
    "files": {
        "backuptest": "830885a349116552a1d104aabad2179e72929689de0b73db22b4668e4d92de47",
        "backuptool.py": "a9c59fc74a476b6b835530365d537de4108df03e65431590e7c86986a2242b25",
        "Instruction.md": "16053594b2515f370641ded410f30e0dba57d7e3ea1ee4306106939b401128e1",
        "Readme.md": "717aace79bb4704b3ee289ec83479b42ee3c5af344dcc2088bc2e570e448fb3e",
        "test_backuptool.py": "17d417f0b9e55700dec8c9a48d2a63384cb7b71c413a59945f7c5bf7b5545cac",
        "snapshots\\snapshot_2025-03-06T21-38-27.json": "59e43eb5b458628ae44f3d105ab895a7108013331b7f71ada5562267f7e85b02",
        "snapshots\\snapshot_2025-03-06T22-02-01.json": "421ea9a3274975a88fc0b7449129098e206dd9c256e9617b57faf333042e46a7"
    },
    "file_contents": {
        "830885a349116552a1d104aabad2179e72929689de0b73db22b4668e4d92de47": "SGVyZSBhcmUgdGhlIHNjcmlwdHMgMw0K",
        "a9c59fc74a476b6b835530365d537de4108df03e65431590e7c86986a2242b25": "",
        "16053594b2515f370641ded410f30e0dba57d7e3ea1ee4306106939b401128e1": "IyBDb2RpbmcgQ2hhbGxlbmdlOiBCYWNrdXAgVG9vbAoKIyMgT2JqZWN0aXZlCgpCdWlsZCBhIGNvbW1hbmQgbGluZSAqKmZpbGUgYmFja3VwIHRvb2wqKiB0aGF0IGNhbiB0YWtlIHNuYXBzaG90cyBvZiBhIGRpcmVjdG9yeSwgc3RvcmluZyBpdHMgY29udGVudHMgaW4gYSBkYXRhYmFzZSBhbmQKc3VwcG9ydGluZyBpbmNyZW1lbnRhbCBiYWNrdXBzLgpFYWNoIHNuYXBzaG90IHNob3VsZCByZXByZXNlbnQgdGhlIHN0YXRlIG9mIHRoZSBkaXJlY3RvcnkgYXQgYSBnaXZlbiBwb2ludCBpbiB0aW1lLgpUaGUgdG9vbCBzaG91bGQgYWxsb3cgdGhlIHVzZXIgdG8gcmVzdG9yZSBhIGNvcHkgb2YgdGhlIGRpcmVjdG9yeSBmcm9tIGEgc25hcHNob3QuClRoZSB0b29sIHNob3VsZCBhbHNvIHN1cHBvcnQgcHJ1bmluZyBvZiBvbGQgc25hcHNob3RzIHdpdGhvdXQgbG9zaW5nIGRhdGEuCgojIyBSZXF1aXJlbWVudHMKCi0gRGVtb25zdHJhdGUgeW91ciBhYmlsaXR5IHRvIHdyaXRlIHJvYnVzdCwgcHJvZmVzc2lvbmFsLWdyYWRlIGNvZGUgdG8gdGhlIGJlc3Qgb2YgeW91ciBhYmlsaXR5LgotIFByb3ZpZGUgKmF1dG9tYXRlZCogdGVzdHMgdGhhdCBwcm92ZSB0aGUgY29ycmVjdG5lc3Mgb2YgeW91ciBpbXBsZW1lbnRhdGlvbi4KLSBQcm92aWRlIGFuIGVhc3kgYW5kIHJlcGVhdGFibGUgd2F5IHRvIGJ1aWxkLCB0ZXN0LCBhbmQgZXhlY3V0ZSB5b3VyCiAgaW1wbGVtZW50YXRpb24gb24gYSB1bml4LWxpa2Ugc3lzdGVtLgoKIyMgR3VpZGVsaW5lcwoKLSBGb3IgdGhlIHB1cnBvc2Ugb2YgdGhpcyBjaGFsbGVuZ2UsIGZvY3VzIG9uIHRoZSBjb3JlIGZ1bmN0aW9uYWxpdHkgcmF0aGVyIHRoYW4gd2luZG93IGRyZXNzaW5nIHN1Y2ggYXMgYXJndW1lbnQKICBwYXJzaW5nIG9yIG91dHB1dCBmb3JtYXR0aW5nLiBUaGUgbWVjaGFuaWNzIG9mIHRoZSBvcGVyYXRpb25zIGFuZCB0aGUgcXVhbGl0eSBvZiB0aGUgY29kZSBhcmUgdGhlIHByaW9yaXR5LCBzbyB5b3UKICBkb24ndCBuZWVkIHRvIHdvcnJ5IGFib3V0IG1ha2luZyB0aGUgY29tbWFuZC1saW5lIGludGVyZmFjZSBwb2xpc2hlZCBvciB1c2VyLWZyaWVuZGx5LgotIFRpbWUgYm94IHlvdXIgZWZmb3J0IHRvIGZpdCB0aGUgYW1vdW50IG9mIHRpbWUgeW91IGFyZSB3aWxsaW5nIGFuZCBhYmxlIHRvIGNvbW1pdC4gSXQncyBPSyB0byBsZWF2ZSBwaWVjZXMgb2YgdGhpcwogIGluY29tcGxldGUuIEl0IGlzIG1vcmUgcHJlZmVyYWJsZSB0byBoYXZlIGEgZmV3IGNvbXBsZXRlIHBpZWNlcyB0aGFuIG1hbnkgaW5jb21wbGV0ZSBwaWVjZXMuCgojIyBPcGVyYXRpb25zCgojIyMgYHNuYXBzaG90YAoKVGFrZXMgYSBzbmFwc2hvdCBvZiBhbGwgZmlsZXMgaW4gdGhlIHNwZWNpZmllZCBkaXJlY3RvcnkgYW5kIHN0b3JlcyB0aGVpciBjb250ZW50IGFuZCBmaWxlbmFtZXMgaW4gYSBkYXRhYmFzZS4KCi0gT25seSB0aGUgZmlsZSBjb250ZW50cyBhbmQgZmlsZW5hbWVzIGFyZSBzdG9yZWQgYXMgcGFydCBvZiB0aGUgc25hcHNob3Q7IG1ldGFkYXRhIGxpa2UgcGVybWlzc2lvbnMsIG93bmVyc2hpcCwgb3IKICB0aW1lc3RhbXBzIHNob3VsZCBiZSBpZ25vcmVkLgotIFNuYXBzaG90cyBzaG91bGQgc3RvcmUgb25seSBpbmNyZW1lbnRhbCBkaWZmZXJlbmNlcyBpbiBvcmRlciB0byBtaW5pbWl6ZSB0aGUgc2l6ZSBvZiB0aGUgZGF0YWJhc2UuIFRoYXQgaXMsIHRoZQogIG1pbmltYWwgYW1vdW50IG9mIGRhdGEgbmVjZXNzYXJ5IHRvIGV4cHJlc3MgdGhlIG5ldyBzdGF0ZSBvZiB0aGUgZGlyZWN0b3J5IGJ5IHJlZmVyZW5jaW5nIGFscmVhZHktc3RvcmVkIGRhdGEuCi0gVGhlIHRvb2wgc2hvdWxkIG5vdCBzdG9yZSBhbnkgZHVwbGljYXRlIGZpbGUgb3IgZGlyZWN0b3J5IGNvbnRlbnQuIFVzZSBjb250ZW50IGhhc2hlcyAoc3VjaCBhcyBTSEEtMjU2KSB0byBkZXRlY3QKICBjaGFuZ2VzIGFuZCBhdm9pZCBzdG9yaW5nIGR1cGxpY2F0ZSBjb250ZW50LgotIFRoZSBkYXRhYmFzZSBjYW4gYmUgYSBkYXRhYmFzZSBvZiBhbnkga2luZCwgbm90IG5lY2Vzc2FyaWx5IGludm9sdmluZyBhIGRhdGFiYXNlIG1hbmFnZW1lbnQgc3lzdGVtLgotIFNuYXBzaG90cyBhcmUgZ2l2ZW4gYSBudW1iZXIgaW4gc2VxdWVuY2UgYmFzZWQgb24gdGhlIG9yZGVyIGluIHdoaWNoIHRoZXkgd2VyZSBjcmVhdGVkLgoKSWxsdXN0cmF0aXZlIGV4YW1wbGU6IGAkIGJhY2t1cHRvb2wgc25hcHNob3QgLS10YXJnZXQtZGlyZWN0b3J5PX4vbXlfaW1wb3J0YW50X2ZpbGVzYAoKIyMjIGBsaXN0YAoKTGlzdHMgc25hcHNob3RzIHRoYXQgYXJlIHN0b3JlZCBpbiB0aGUgZGF0YWJhc2UuCgotIFNuYXBzaG90cyBhcmUgbGlzdGVkIGluIGEgdGFibGUgb24gc3Rkb3V0IHdpdGggdGhlIGZvbGxvd2luZyBjb2x1bW5zOiBzbmFwc2hvdCBudW1iZXIsIHRpbWVzdGFtcAoKSWxsdXN0cmF0aXZlIGV4YW1wbGU6CgpgYGAKJCBiYWNrdXB0b29sIGxpc3QKU05BUFNIT1QgIFRJTUVTVEFNUAoxICAgICAgICAgMjAyNC0wOS0wMSAxNDozNToyMgoyICAgICAgICAgMjAyNC0wOS0wMiAwOToxMDo0NQozICAgICAgICAgMjAyNC0wOS0wMyAxNjoyMjoxMApgYGAKCiMjIyBgcmVzdG9yZWAKClJlc3RvcmVzIHRoZSBkaXJlY3Rvcnkgc3RhdGUgZnJvbSBhbnkgcHJldmlvdXMgc25hcHNob3QgaW50byBhIG5ldyBkaXJlY3RvcnkuCgotIFRoZSB0b29sIHNob3VsZCByZWNyZWF0ZSB0aGUgZW50aXJlIGRpcmVjdG9yeSBzdHJ1Y3R1cmUgYW5kIGNvbnRlbnRzCiAgZXhhY3RseSBhcyB0aGV5IHdlcmUgYXQgdGhlIHRpbWUgb2YgdGhlIHNuYXBzaG90LgotIE9ubHkgdGhlIGZpbGVzIHByZXNlbnQgaW4gdGhlIHNuYXBzaG90IHNob3VsZCBiZSByZXN0b3JlZC4KLSBBbGwgZmlsZXMgdGhhdCB3ZXJlIG9yaWdpbmFsbHkgc2hhcHNob3R0ZWQgc2hvdWxkIGJlIHJlc3RvcmVkLgotIFRoZSByZXN0b3JlZCBmaWxlcyBzaG91bGQgYmUgYml0LWZvci1iaXQgaWRlbnRpY2FsIHRvIHRoZSBvcmlnaW5hbGx5CiAgc25hcHNob3R0ZWQgZmlsZXMuCgpJbGx1c3RyYXRpdmUgZXhhbXBsZTogYCQgYmFja3VwdG9vbCByZXN0b3JlIC0tc25hcHNob3QtbnVtYmVyPTQyIC0tb3V0cHV0LWRpcmVjdG9yeT0uL291dGAKCiMjIyBgcHJ1bmVgCgpSZW1vdmVzIG9sZCBzbmFwc2hvdHMgZnJvbSB0aGUgZGF0YWJhc2UgYW5kIGRlbGV0ZXMgYW55IHVucmVmZXJlbmNlZCBkYXRhLgoKLSBUaGUgdG9vbCBzaG91bGQgYWxsb3cgdGhlIHVzZXIgdG8gcHJ1bmUgb2xkZXIgc25hcHNob3RzIHdoaWxlIGVuc3VyaW5nIG5vIGRhdGEgbG9zcyBmcm9tIHRoZSByZW1haW5pbmcgc25hcHNob3RzLgotIEFmdGVyIHBydW5pbmcsIGFsbCByZW1haW5pbmcgc25hcHNob3RzIHNob3VsZCBzdGlsbCBiZSBmdWxseSByZXN0b3JhYmxlLgoKSWxsdXN0cmF0aXZlIGV4YW1wbGU6IGAkIGJhY2t1cHRvb2wgcHJ1bmUgLS1zbmFwc2hvdD00MmAKCiMjIFNhbml0eSBDaGVja3MKCkJlZm9yZSBzdWJtaXR0aW5nLCBkb3VibGUtY2hlY2sgdGhhdCBhbGwgb2YgdGhlc2UgYXJlIHRydWUgb2YgeW91ciBpbXBsZW1lbnRhdGlvbi4KSXQgaXMgcmVjb21tZW5kZWQgdG8gY3JlYXRlIGludGVncmF0aW9uIHRlc3RzIHRvIHZlcmlmeSB0aGVzZSB3aGVyZSBwb3NzaWJsZS4KCi0gQWxsIGZpbGVzIHRoYXQgd2VyZSBvcmlnaW5hbGx5IGluY2x1ZGVkIGluIGEgc25hcHNob3QgYXJlIHJlc3RvcmVkIHdoZW4gdGhhdAogIHNuYXBzaG90IGlzIHJlc3RvcmVkLgotIFJlc3RvcmVkIGZpbGVzIGFyZSBiaXQtZm9yLWJpdCBpZGVudGljYWwgdG8gdGhlIG9yaWdpbmFsbHkgc25hcHNob3R0ZWQgZmlsZXMuCi0gUHJ1bmluZyBhIHNuYXBzaG90IHNob3VsZCBub3QgYWZmZWN0IHRoZSBhYmlsaXR5IHRvIHJlc3RvcmUgYSBkaWZmZXJlbnQKICBzbmFwc2hvdCwgZXZlbiBpZiB0aGUgcHJ1bmVkIHNuYXBzaG90IHNoYXJlZCBkYXRhIHdpdGggdGhlIG90aGVyIHNuYXBzaG90LiBBbgogIHVucHJ1bmVkIHNuYXBzaG90IHNob3VsZCBhbHdheXMgYmUgcmVzdG9yYWJsZS4KLSBZb3VyIGltcGxlbWVudGF0aW9uIGNhbiBoYW5kbGUgZmlsZXMgdGhhdCBjb250YWluIGFyYml0cmFyeSBiaW5hcnkgY29udGVudC4KLSBZb3VyIGltcGxlbWVudGF0aW9uIGNhbiBoYW5kbGUgcmVsYXRpdmUgYW5kIGFic29sdXRlIGZpbGUgcGF0aHMgcm9idXN0bHkuCi0gV2hlbiBzbmFwc2hvdHRpbmcgYSBkaXJlY3RvcnkgdHdpY2Ugd2l0aG91dCBjaGFuZ2VzLCB0aGUgc2Vjb25kIHNuYXBzaG90CiAgc2hvdWxkIG9ubHkgY2F1c2Ugc3RvcmFnZSBvZiBtZXRhZGF0YSwgYW5kIG5vdCByZXN1bHQgaW4gc3RvcmFnZSBvZiBkdXBsaWNhdGUKICBmaWxlIGNvbnRlbnQuCi0gVHJ5IGdldHRpbmcgeW91ciBwcm9qZWN0IHNldCB1cCBhbmQgcnVubmluZyBvbiBhIGNsZWFuIHN5c3RlbSBieSBmb2xsb3dpbmcKICB5b3VyIG93biBwcm92aWRlZCBpbnN0cnVjdGlvbnMuIFlvdSBjYW4gdXNlIGEgY29udGFpbmVyIG9yIFZNIHRvIHRyeSB0aGlzLgogIFRoZSBwcm9qZWN0IHNob3VsZCBiZSB0cml2aWFsIHRvIGdldCBydW5uaW5nLgoKIyMgU3RyZXRjaCBnb2FscwoKLSBFbmhhbmNlIGBsaXN0YCBvcGVyYXRpb24gdG8gaW5jbHVkZSBhZGRpdGlvbmFsIGRpc2stdXNhZ2UgbWV0cmljcywgc3VjaCBhczoKICAgIC0gSG93IG11Y2ggZGlzayBzcGFjZSB0aGUgZGlyZWN0b3J5IGNvbnN1bWVkIGF0IHRoZSB0aW1lIG9mIHNuYXBzaG90dGluZyAoaS5lLiBob3cgbXVjaCBzcGFjZSB0aGUgcmVzdG9yZWQgc25hcHNob3Qgd291bGQgcmVxdWlyZSkuCiAgICAtIEhvdyBtdWNoIGRpc2sgc3BhY2UgdGhlIHNuYXBzaG90IGFjdHVhbGx5IHJlcXVpcmVzIGZvciBpdHNlbGYuICAoaS5lLiBob3cgbXVjaCBzcGFjZSBpcyByZXF1aXJlZCB0byBzdG9yZSB0aGUgZmlsZXMgdGhhdCBhcmUgdW5pcXVlIHRvIHRoZSBzbmFwc2hvdCkKICAgIC0gVG90YWwgc2l6ZSBvZiB0aGUgZGF0YWJhc2UgYXMgYSAnc3VtbWFyeScgbGluZQotIEltcGxlbWVudCBhIGBjaGVja2Agb3BlcmF0aW9uIHRoYXQgc2NhbnMgdGhlIGRhdGFiYXNlIGZvciBhbnkgY29ycnVwdGVkIGZpbGUgY29udGVudC4KLSBVc2UgY2h1bmtpbmcgdG8gZGUtZHVwbGljYXRlIHN0b3JhZ2UgYXQgYSBtb3JlIGZpbmUtZ3JhaW5lZCBsZXZlbC4KLSBDb21lIHVwIHdpdGggeW91ciBvd24gaWRlYSBhbmQgaW1wbGVtZW50IGl0IQoKIyMgTGljZW5zaW5nCgpDb3B5cmlnaHQgMjAyNSBHcmlkVW5pdHkuIEFsbCByaWdodHMgcmVzZXJ2ZWQuCgpUaGlzIGRvY3VtZW50IGlzIGNvcHlyaWdodGVkIGJ5IEdyaWRVbml0eSBhbmQgaXMgcHJvdmlkZWQgZm9yIHJlZmVyZW5jZSBwdXJwb3NlcyBvbmx5LgoKVGhpcyBkb2N1bWVudCBtYXkgbm90IGJlIGNvcGllZCwgc2hhcmVkLCBvciByZWRpc3RyaWJ1dGVkIHdpdGhvdXQgcHJpb3IKcGVybWlzc2lvbiBmcm9tIEdyaWRVbml0eS4KClRoaXMgY29weXJpZ2h0IGFwcGxpZXMgc29sZWx5IHRvIHRoaXMgZG9jdW1lbnQgYW5kIGRvZXMgbm90IGV4dGVuZCB0byBhbnkKc29sdXRpb25zLCBjb2RlLCBvciByZXNwb25zZXMgcHJvdmlkZWQgYnkgdGhlIGNhbmRpZGF0ZS4K",
        "717aace79bb4704b3ee289ec83479b42ee3c5af344dcc2088bc2e570e448fb3e": "U3VyZSEgSGVyZSBpcyBhIFJFQURNRS5tZCB0ZW1wbGF0ZSB0aGF0IG91dGxpbmVzIHRoZSB1c2FnZSwgZmVhdHVyZXMsIGFuZCBDTEkgY29tbWFuZHMgb2YgeW91ciBiYWNrdXAgdG9vbCBzY3JpcHQsIGluY2x1ZGluZyB0aGUgbmV3IHNuYXBzaG90IGpvYiBmdW5jdGlvbmFsaXR5Lg0KDQotLS0NCg0KIyBCYWNrdXAgVG9vbA0KDQojIyBPdmVydmlldw0KDQpUaGlzIEJhY2t1cCBUb29sIGFsbG93cyB5b3UgdG8gdGFrZSBzbmFwc2hvdHMgb2YgYSBzcGVjaWZpYyBkaXJlY3RvcnksIGxpc3RpbmcgZXhpc3Rpbmcgc25hcHNob3RzLCByZXN0b3JpbmcgZmlsZXMgZnJvbSBzbmFwc2hvdHMsIGFuZCBvcHRpb25hbGx5IHRha2luZyBzbmFwc2hvdHMgYXQgcmVndWxhciBpbnRlcnZhbHMgZm9yIGEgc3BlY2lmaWVkIGR1cmF0aW9uLiBUaGUgYmFja3VwcyBhcmUgc2F2ZWQgYXMgSlNPTiBmaWxlcywgc3RvcmluZyBib3RoIHRoZSBtZXRhZGF0YSBvZiBmaWxlcyAobGlrZSBwYXRocyBhbmQgaGFzaGVzKSBhbmQgdGhlaXIgY29udGVudCBlbmNvZGVkIGluIEJhc2U2NCBmb3JtYXQuDQoNCiMjIEZlYXR1cmVzDQoNCi0gVGFrZSBzbmFwc2hvdHMgb2YgYSB0YXJnZXQgZGlyZWN0b3J5Lg0KLSBMaXN0IGFsbCBhdmFpbGFibGUgc25hcHNob3RzLg0KLSBSZXN0b3JlIGZpbGVzIGZyb20gYSBzZWxlY3RlZCBzbmFwc2hvdC4NCi0gUnVuIGEgc25hcHNob3Qgam9iIHRvIHRha2UgY29udGludW91cyBzbmFwc2hvdHMgYXQgZGVmaW5lZCBpbnRlcnZhbHMuDQotIFBydW5lIG9sZCBzbmFwc2hvdHMgKHRvIGJlIGltcGxlbWVudGVkKS4NCg0KIyMgSW5zdGFsbGF0aW9uDQoNCkVuc3VyZSB5b3UgaGF2ZSBQeXRob24gMyBpbnN0YWxsZWQuIFlvdSBjYW4gcnVuIHRoZSBzY3JpcHQgZGlyZWN0bHksIGFzIGl0IGRvZXNuJ3QgcmVxdWlyZSBhbnkgYWRkaXRpb25hbCBkZXBlbmRlbmNpZXMuDQoNCiMjIFVzYWdlDQoNClJ1biB0aGUgc2NyaXB0IGZyb20gdGhlIGNvbW1hbmQgbGluZSB1c2luZyB0aGUgZm9sbG93aW5nIGNvbW1hbmRzOg0KDQojIyMgMS4gU25hcHNob3QNCg0KVGFrZSBhIHNuYXBzaG90IG9mIGEgdGFyZ2V0IGRpcmVjdG9yeS4NCg0KYGBgYmFzaA0KcHl0aG9uIGJhY2t1cHRvb2wucHkgc25hcHNob3QgLS10YXJnZXQtZGlyZWN0b3J5IC9wYXRoL3RvL3lvdXIvZGlyZWN0b3J5DQpgYGANCg0KIyMjIDIuIExpc3QNCg0KTGlzdCBhbGwgYXZhaWxhYmxlIHNuYXBzaG90cy4NCg0KYGBgYmFzaA0KcHl0aG9uIGJhY2t1cHRvb2wucHkgbGlzdA0KYGBgDQoNCiMjIyAzLiBSZXN0b3JlDQoNClJlc3RvcmUgZmlsZXMgZnJvbSBhIHNlbGVjdGVkIHNuYXBzaG90IHRvIGEgc3BlY2lmaWVkIG91dHB1dCBkaXJlY3RvcnkuDQoNCmBgYGJhc2gNCnB5dGhvbiBiYWNrdXB0b29sLnB5IHJlc3RvcmUgLS1zbmFwc2hvdC1maWxlIHNuYXBzaG90X2ZpbGVuYW1lLmpzb24gLS1vdXRwdXQtZGlyZWN0b3J5IC9wYXRoL3RvL3Jlc3RvcmUvZGlyZWN0b3J5DQpgYGANCg0KIyMjIDQuIFBydW5lDQoNClBydW5lIG9sZCBzbmFwc2hvdHMsIGtlZXBpbmcgb25seSB0aGUgc3BlY2lmaWVkIG51bWJlci4NCg0KYGBgYmFzaA0KcHl0aG9uIGJhY2t1cHRvb2wucHkgcHJ1bmUgLS1zbmFwc2hvdC1udW1iZXIgTg0KYGBgDQoNCiMjIyA1LiBTbmFwc2hvdCBKb2INCg0KUnVuIGEgam9iIHRvIHRha2Ugc25hcHNob3RzIG9mIGEgdGFyZ2V0IGRpcmVjdG9yeSBhdCBzcGVjaWZpZWQgaW50ZXJ2YWxzIGZvciBhIGRlZmluZWQgZHVyYXRpb24uDQoNCmBgYGJhc2gNCnB5dGhvbiBiYWNrdXB0b29sLnB5IGpvYiAtLXRhcmdldC1kaXJlY3RvcnkgL3BhdGgvdG8veW91ci9kaXJlY3RvcnkgLS1pbnRlcnZhbCBJTlRFUlZBTF9EVVJBVElPTiAtLWR1cmF0aW9uIFRPVEFMX0RVUkFUSU9ODQpgYGANCg0KLSBgSU5URVJWQUxfRFVSQVRJT05gOiBUaGUgdGltZSB0byB3YWl0IGJldHdlZW4gZWFjaCBzbmFwc2hvdCBpbiBzZWNvbmRzLg0KLSBgVE9UQUxfRFVSQVRJT05gOiBUaGUgdG90YWwgdGltZSB0aGUgam9iIHNob3VsZCBydW4gaW4gc2Vjb25kcy4NCg0KIyMjIyBFeGFtcGxlOg0KDQpUbyB0YWtlIHNuYXBzaG90cyBldmVyeSAxMCBzZWNvbmRzIGZvciAxIG1pbnV0ZToNCg0KYGBgYmFzaA0KcHl0aG9uIGJhY2t1cHRvb2wucHkgam9iIC0tdGFyZ2V0LWRpcmVjdG9yeSAvcGF0aC90by95b3VyL2RpcmVjdG9yeSAtLWludGVydmFsIDEwIC0tZHVyYXRpb24gNjANCmBgYA0KDQojIyBGaWxlIFN0cnVjdHVyZQ0KDQotICoqc25hcHNob3RzLyoqOiBEaXJlY3Rvcnkgd2hlcmUgYWxsIHNuYXBzaG90IEpTT04gZmlsZXMgd2lsbCBiZSBzYXZlZC4NCi0gVGhlIHNjcmlwdCBpdHNlbGYgd2lsbCBjcmVhdGUgdGhlIHNuYXBzaG90cyBkaXJlY3RvcnkgaWYgaXQgZG9lcyBub3QgZXhpc3QuDQoNCiMjIFJlcXVpcmVtZW50cw0KDQotIFB5dGhvbiAzLngNCg0KIyMgTGljZW5zZQ0KDQpUaGlzIHByb2plY3QgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIC0gc2VlIHRoZSBbTElDRU5TRV0oTElDRU5TRSkgZmlsZSBmb3IgZGV0YWlscy4NCg0KIyMgQWNrbm93bGVkZ21lbnRzDQoNCi0gVGhhbmtzIHRvIHRoZSBvcGVuLXNvdXJjZSBjb21tdW5pdHkgZm9yIHRoZSBmcmFtZXdvcmtzIGFuZCBsaWJyYXJpZXMgdGhhdCBtYWtlIHRoaXMgcG9zc2libGUuDQoNCi0tLQ0KDQpGZWVsIGZyZWUgdG8gbW9kaWZ5IGFueSBzZWN0aW9ucyBiYXNlZCBvbiB5b3VyIHByb2plY3QncyBuZWVkcyBvciBhbnkgYWRkaXRpb25hbCBpbnN0cnVjdGlvbnMgb3IgZXhhbXBsZXMgeW91J2QgbGlrZSBpbmNsdWRlZCENCg==",
        "17d417f0b9e55700dec8c9a48d2a63384cb7b71c413a59945f7c5bf7b5545cac": "aW1wb3J0IG9zDQppbXBvcnQgdGVtcGZpbGUNCmltcG9ydCBzaHV0aWwNCmltcG9ydCBmaWxlY21wDQpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgNCmltcG9ydCBzdWJwcm9jZXNzDQppbXBvcnQganNvbg0KDQojIENvbnN0YW50cw0KU05BUFNIT1RfRElSID0gJ3NuYXBzaG90cycNClRFU1RfRklMRVMgPSB7DQogICAgInRlc3QxLnR4dCI6ICJIZWxsbywgV29ybGQhIiwNCiAgICAidGVzdDIudHh0IjogIlRoaXMgaXMgYSB0ZXN0IGZpbGUuIiwNCiAgICAidGVzdDMudHh0IjogIkJhY2t1cCBhbmQgcmVzdG9yZSBmdW5jdGlvbmFsaXR5IHdvcmtzLiINCn0NCg0KZGVmIGNyZWF0ZV90ZXN0X2ZpbGVzKHRhcmdldF9kaXIpOg0KICAgICIiIkNyZWF0ZSB0ZXN0IGZpbGVzIGluIHRoZSBzcGVjaWZpZWQgZGlyZWN0b3J5LiIiIg0KICAgIGZvciBmaWxlbmFtZSwgY29udGVudCBpbiBURVNUX0ZJTEVTLml0ZW1zKCk6DQogICAgICAgIHdpdGggb3BlbihQYXRoKHRhcmdldF9kaXIpIC8gZmlsZW5hbWUsICd3JykgYXMgZjoNCiAgICAgICAgICAgIGYud3JpdGUoY29udGVudCkNCg0KZGVmIHJ1bl9jb21tYW5kKGNvbW1hbmQpOg0KICAgICIiIlJ1biB0aGUgYmFja3VwIHRvb2wgY29tbWFuZCB1c2luZyBzdWJwcm9jZXNzLiIiIg0KICAgIHJlc3VsdCA9IHN1YnByb2Nlc3MucnVuKGNvbW1hbmQsIHNoZWxsPVRydWUsIGNhcHR1cmVfb3V0cHV0PVRydWUsIHRleHQ9VHJ1ZSkNCiAgICByZXR1cm4gcmVzdWx0DQoNCmRlZiB2ZXJpZnlfZmlsZXMob3JpZ2luYWxfZGlyLCByZXN0b3JlZF9kaXIpOg0KICAgICIiIlZlcmlmeSB0aGF0IGFsbCBmaWxlcyBpbiB0aGUgb3JpZ2luYWwgZGlyZWN0b3J5IG1hdGNoIHRoZSByZXN0b3JlZCBmaWxlcy4iIiINCiAgICBmb3IgZmlsZW5hbWUgaW4gVEVTVF9GSUxFUy5rZXlzKCk6DQogICAgICAgIG9yaWdpbmFsX2ZpbGUgPSBQYXRoKG9yaWdpbmFsX2RpcikgLyBmaWxlbmFtZQ0KICAgICAgICByZXN0b3JlZF9maWxlID0gUGF0aChyZXN0b3JlZF9kaXIpIC8gZmlsZW5hbWUNCiAgICAgICAgaWYgbm90IG9yaWdpbmFsX2ZpbGUuaXNfZmlsZSgpIG9yIG5vdCByZXN0b3JlZF9maWxlLmlzX2ZpbGUoKToNCiAgICAgICAgICAgIHByaW50KGYiRmlsZSB2ZXJpZmljYXRpb24gZmFpbGVkIGZvciB7ZmlsZW5hbWV9LiIpDQogICAgICAgICAgICByZXR1cm4gRmFsc2UNCiAgICAgICAgDQogICAgICAgIGlmIG5vdCBmaWxlY21wLmNtcChvcmlnaW5hbF9maWxlLCByZXN0b3JlZF9maWxlLCBzaGFsbG93PUZhbHNlKToNCiAgICAgICAgICAgIHByaW50KGYiRmlsZSBjb250ZW50cyBkaWZmZXIgZm9yIHtmaWxlbmFtZX0uIikNCiAgICAgICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICAgICAgDQogICAgcmV0dXJuIFRydWUNCg0KZGVmIHRlc3RfYmFja3VwX3Rvb2woKToNCiAgICAiIiJNYWluIHRlc3RpbmcgZnVuY3Rpb24gZm9yIHRoZSBiYWNrdXAgdG9vbC4iIiINCiAgICAjIENyZWF0ZSBhIHRlbXBvcmFyeSBkaXJlY3RvcnkgZm9yIHRlc3RpbmcNCiAgICB3aXRoIHRlbXBmaWxlLlRlbXBvcmFyeURpcmVjdG9yeSgpIGFzIHRlbXBfZGlyOg0KICAgICAgICAjIENyZWF0ZSB0aGUgdGFyZ2V0IGRpcmVjdG9yeSBmb3IgYmFja3VwDQogICAgICAgIHRhcmdldF9kaXIgPSBQYXRoKHRlbXBfZGlyKSAvICdiYWNrdXBfdGVzdCcNCiAgICAgICAgdGFyZ2V0X2Rpci5ta2RpcigpDQoNCiAgICAgICAgIyBDcmVhdGUgdGVzdCBmaWxlcw0KICAgICAgICBjcmVhdGVfdGVzdF9maWxlcyh0YXJnZXRfZGlyKQ0KDQogICAgICAgICMgVGFrZSBhIHNuYXBzaG90IG9mIHRoZSBjcmVhdGVkIGZpbGVzDQogICAgICAgIHNuYXBzaG90X2NvbW1hbmQgPSBmJ3B5dGhvbiBiYWNrdXB0b29sLnB5IHNuYXBzaG90IC0tdGFyZ2V0LWRpcmVjdG9yeT17dGFyZ2V0X2Rpcn0nDQogICAgICAgIHJlc3VsdCA9IHJ1bl9jb21tYW5kKHNuYXBzaG90X2NvbW1hbmQpDQogICAgICAgIHByaW50KHJlc3VsdC5zdGRvdXQpDQoNCiAgICAgICAgIyBMaXN0IHNuYXBzaG90cyB0byBjb25maXJtIGl0IHdhcyBjcmVhdGVkDQogICAgICAgIGxpc3RfY29tbWFuZCA9ICdweXRob24gYmFja3VwdG9vbC5weSBsaXN0Jw0KICAgICAgICBsaXN0X3Jlc3VsdCA9IHJ1bl9jb21tYW5kKGxpc3RfY29tbWFuZCkNCiAgICAgICAgcHJpbnQobGlzdF9yZXN1bHQuc3Rkb3V0KQ0KDQogICAgICAgICMgUmVzdG9yZSB0aGUgc25hcHNob3QgdG8gYSBuZXcgZGlyZWN0b3J5DQogICAgICAgIHJlc3RvcmVfZGlyID0gUGF0aCh0ZW1wX2RpcikgLyAncmVzdG9yZV9kaXInDQogICAgICAgIHJlc3RvcmVfY29tbWFuZCA9IGYncHl0aG9uIGJhY2t1cHRvb2wucHkgcmVzdG9yZSAtLXNuYXBzaG90LWZpbGU9c25hcHNob3RfKi5qc29uIC0tb3V0cHV0LWRpcmVjdG9yeT17cmVzdG9yZV9kaXJ9Jw0KICAgICAgICByZXN0b3JlX3Jlc3VsdCA9IHJ1bl9jb21tYW5kKHJlc3RvcmVfY29tbWFuZCkNCiAgICAgICAgcHJpbnQocmVzdG9yZV9yZXN1bHQuc3Rkb3V0KQ0KDQogICAgICAgICMgVmVyaWZ5IHRoYXQgdGhlIHJlc3RvcmVkIGZpbGVzIG1hdGNoIHRoZSBvcmlnaW5hbHMNCiAgICAgICAgaWYgdmVyaWZ5X2ZpbGVzKHRhcmdldF9kaXIsIHJlc3RvcmVfZGlyKToNCiAgICAgICAgICAgIHByaW50KCJUZXN0IHBhc3NlZDogRmlsZXMgdmVyaWZpZWQgc3VjY2Vzc2Z1bGx5ISIpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwcmludCgiVGVzdCBmYWlsZWQ6IEZpbGVzIHZlcmlmaWNhdGlvbiBmYWlsZWQuIikNCg0KaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoNCiAgICB0ZXN0X2JhY2t1cF90b29sKCkNCg==",
        "59e43eb5b458628ae44f3d105ab895a7108013331b7f71ada5562267f7e85b02": "",
        "421ea9a3274975a88fc0b7449129098e206dd9c256e9617b57faf333042e46a7": "ew0KICAgICJ0aW1lc3RhbXAiOiAiMjAyNS0wMy0wNlQyMi0wMi0wMSIsDQogICAgImZpbGVzIjogew0KICAgICAgICAiQzpcXFVzZXJzXFxIaWdod2F5XFxBcHBEYXRhXFxMb2NhbFxcVGVtcFxcdG1wdXBqdXN0eWlcXGJhY2t1cF90ZXN0XFx0ZXN0MS50eHQiOiAiZGZmZDYwMjFiYjJiZDViMGFmNjc2MjkwODA5ZWMzYTUzMTkxZGQ4MWM3ZjcwYTRiMjg2ODhhMzYyMTgyOTg2ZiIsDQogICAgICAgICJDOlxcVXNlcnNcXEhpZ2h3YXlcXEFwcERhdGFcXExvY2FsXFxUZW1wXFx0bXB1cGp1c3R5aVxcYmFja3VwX3Rlc3RcXHRlc3QyLnR4dCI6ICJmMjliYzY0YTlkMzczMmI0YjkwMzUxMjVmZGIzMjg1ZjViNjQ1NTc3OGVkY2E3MjQxNDY3MWUwY2EzYjJlMGRlIiwNCiAgICAgICAgIkM6XFxVc2Vyc1xcSGlnaHdheVxcQXBwRGF0YVxcTG9jYWxcXFRlbXBcXHRtcHVwanVzdHlpXFxiYWNrdXBfdGVzdFxcdGVzdDMudHh0IjogImVhYWVjOWUwODZlM2E5NTJkNGM4MmZiZDNkYWI3NjkxM2FhY2ZlZTI0ZmU3MWE0YmFmMTViYTE1M2FmMjE4ZTgiDQogICAgfSwNCiAgICAiZmlsZV9jb250ZW50cyI6IHsNCiAgICAgICAgImRmZmQ2MDIxYmIyYmQ1YjBhZjY3NjI5MDgwOWVjM2E1MzE5MWRkODFjN2Y3MGE0YjI4Njg4YTM2MjE4Mjk4NmYiOiAiU0dWc2JHOHNJRmR2Y214a0lRPT0iLA0KICAgICAgICAiZjI5YmM2NGE5ZDM3MzJiNGI5MDM1MTI1ZmRiMzI4NWY1YjY0NTU3NzhlZGNhNzI0MTQ2NzFlMGNhM2IyZTBkZSI6ICJWR2hwY3lCcGN5QmhJSFJsYzNRZ1ptbHNaUzQ9IiwNCiAgICAgICAgImVhYWVjOWUwODZlM2E5NTJkNGM4MmZiZDNkYWI3NjkxM2FhY2ZlZTI0ZmU3MWE0YmFmMTViYTE1M2FmMjE4ZTgiOiAiUW1GamEzVndJR0Z1WkNCeVpYTjBiM0psSUdaMWJtTjBhVzl1WVd4cGRIa2dkMjl5YTNNdSINCiAgICB9LA0KICAgICJkaXJlY3Rvcnlfc2l6ZSI6IDcyLA0KICAgICJzbmFwc2hvdF9zaXplIjogNzINCn0="
    },
    "directory_size": 83020,
    "snapshot_size": 83020
}